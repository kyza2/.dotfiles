#!/bin/sh
#
# external_rules_command
#
# Absolute path to the command used to retrieve rule consequences.
# The command will receive the following arguments: window ID, class
# name, instance name, and intermediate consequences. The output of
# that command must have the following format: key1=value1
# key2=value2 ...  (the valid key/value pairs are given in the
# description of the rule command).
#
#
# Rule
#    General Syntax
# 	   rule COMMANDS
#
#    Commands
# 	   -a, --add (<class_name>|*)[:(<instance_name>|*)] [-o|--one-shot]
# 	   [monitor=MONITOR_SEL|desktop=DESKTOP_SEL|node=NODE_SEL]
# 	   [state=STATE] [layer=LAYER] [split_dir=DIR] [split_ratio=RATIO]
# 	   [(hidden|sticky|private|locked|marked|center|follow|manage|focus|border)=(on|off)]
# 	   [rectangle=WxH+X+Y]
# 		   Create a new rule.
#
# 	   -r, --remove
# 	   ^<n>|head|tail|(<class_name>|*)[:(<instance_name>|*)]...
# 		   Remove the given rules.
#
# 	   -l, --list
# 		   List the rules.

border='' \
	center='' \
	class=${2} \
	desktop='' \
	focus='' \
	follow='' \
	hidden='' \
	id=${1?} \
	instance=${3} \
	layer='' \
	locked='' \
	manage='' \
	marked='' \
	misc=${4} \
	monitor='' \
	node='' \
	private='' \
	rectangle='' \
	split_dir='' \
	split_ratio='' \
	state='' \
	sticky='' \
	urgent=''

firefox() {
	desktop=^1
}

gimp() {
	desktop=^8
	follow=on
}

zathura() {
	state=tiled
}

discord() {
	desktop=^6
	follow=off
	state=pseudo_tiled
	rectangle=1850x1000+0+0
	bspc config ignore_ewmh_focus true && sleep 0.2
	echo "sleep 10; bspc config ignore_ewmh_focus false" | at now
}

ranger() {
	state=pseudo_tiled
	rectangle=1200x800+0+0
	center=true
}

teams() {
	state=tiled
	desktop=^8
}

matplotlib() {
	desktop=^2
	state=floating
}

qbittorrent() {
	desktop='^7'
	follow=on
	case $(xprop -id "$id" WM_NAME) in
	*qBittorrent*) state=tiled ;;
	*) state=floating ;;
	esac
}

spotify() {
	desktop=^4
	rectangle=1800x1000+0+0
	state=pseudo_tiled
}

telegram_desktop() {
	desktop=^3
}

chromium() {
	desktop=^2
}

matlab() {
	desktop=^4
}

mpv() {
	desktop=^7
	state=floating
	layer=normal
	rectangle=1200x800+0+0
	center=true
	follow=on
}

nautilus() {
	desktop='^10'
	state=pseudo_tiled
	rectangle=1024x640+0+0
	center=on
	follow=on
}

case $instance.$class in
*.MATLAB*) matlab ;;
*.Matplotlib) matplotlib ;;
*.Nautilus) nautilus ;;
*.Spotify) spotify ;;
*.Zathura) zathura ;;
*.discord) discord ;;
*.matplotlib) matplotlib ;;
*.mpv) mpv ;;
*.qBittorrent) qbittorrent ;;
*Teams*) teams ;;
Ranger.Ranger) ranger ;;
.)
	case $(ps -p "$(xdo pid "$id")" -o comm= 2>/dev/null) in
	spotify) spotify ;;
	esac
	;;
esac

# printf "id: ${1} class: ${2} instance: ${3} misc: ${4} \n" >>"${HOME}/.config/bspwm/bspwm.log"

printf '%s' \
	${border:+"border=$border "} \
	${center:+"center=$center "} \
	${desktop:+"desktop=$desktop "} \
	${focus:+"focus=$focus "} \
	${follow:+"follow=$follow "} \
	${hidden:+"hidden=$hidden "} \
	${layer:+"layer=$layer "} \
	${locked:+"locked=$locked "} \
	${manage:+"manage=$manage "} \
	${marked:+"marked=$marked "} \
	${monitor:+"monitor=$monitor "} \
	${node:+"node=$node "} \
	${private:+"private=$private "} \
	${rectangle:+"rectangle=$rectangle "} \
	${split_dir:+"split_dir=$split_dir "} \
	${split_ratio:+"split_ratio=$split_ratio "} \
	${state:+" state=$state "} \
	${sticky:+"sticky=$sticky "} \
	${urgent:+"urgent=$urgent "}

# vim: set ft=sh
